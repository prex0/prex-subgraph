specVersion: 1.0.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  {{#TransferRequestDispatcher}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      address: "{{address}}"
      abi: TransferRequestDispatcher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TransferRequest
        - CoinMovingHistory
      abis:
        - name: TransferRequestDispatcher
          file: ./abis/TransferRequestDispatcher.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transferred(address,address,address,uint256,bytes)
          handler: handleTransferred
      file: ./src/TransferRequestDispatcher.ts
  {{/TransferRequestDispatcher}}
  {{#OnetimeLockRequestDispatcher}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      address: "{{address}}"
      abi: OnetimeLockRequestDispatcher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - OnetimeLock
      abis:
        - name: OnetimeLockRequestDispatcher
          file: ./abis/OnetimeLockRequestDispatcher.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: RequestSubmitted(bytes32,address,address,uint256,uint256,bytes)
          handler: handleRequestSubmitted
        - event: RequestCompleted(bytes32,address,bytes)
          handler: handleRequestCompleted
        - event: RequestCancelled(bytes32)
          handler: handleRequestCancelled
      file: ./src/OnetimeLockRequestDispatcher.ts
  {{/OnetimeLockRequestDispatcher}}
  - kind: ethereum/contract
    name: TokenDistributor
    network: {{network}}
    source:
      address: "{{TokenDistributor}}"
      abi: TokenDistributor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TokenDistributeRequest
      abis:
        - name: TokenDistributor
          file: ./abis/TokenDistributor.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Submitted(bytes32,address,address,address,uint256,uint256,uint256,uint256,uint256,string,bytes32)
          handler: handleSubmitted
        - event: Deposited(bytes32,address,uint256)
          handler: handleDeposited
        - event: Received(bytes32,address,uint256)
          handler: handleReceived
        - event: RequestCancelled(bytes32,uint256)
          handler: handleRequestCancelled
        - event: RequestExpired(bytes32,uint256)
          handler: handleRequestExpired
      file: ./src/TokenDistributor.ts
  - kind: ethereum/contract
    name: SwapExecutorV1
    network: {{network}}
    source:
      address: "{{SwapExecutorV1}}"
      abi: SwapExecutorV1
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - SwapV1History
      abis:
        - name: SwapExecutorV1
          file: ./abis/SwapExecutorV1.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: OrderFilled(indexed bytes32,indexed address,address,address,uint256,(address,uint256,address)[])
          handler: handleOrderFilled
      file: ./src/SwapExecutorV1.ts
  - kind: ethereum/contract
    name: ProfileRegistry
    network: {{network}}
    source:
      address: "{{ProfileRegistry}}"
      abi: ProfileRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/ProfileRegistry.ts
      entities:
        - ProfileNameGroup
        - EndUser
      abis:
        - name: ProfileRegistry
          file: ./abis/ProfileRegistry.json
      eventHandlers:
        - event: ProfileNameUpdated(indexed address,address,string)
          handler: handleProfileNameUpdated
        - event: ProfileImageUpdated(indexed address,address,uint256)
          handler: handleProfileImageUpdated
        - event: ProfileNameGroupCreated(indexed address,string)
          handler: handleProfileNameGroupCreated
        - event: ProfileMetadataUpdated(indexed address,bytes32)
          handler: handleProfileMetadataUpdated
  - kind: ethereum/contract
    name: ProfileRegistryV2
    network: {{network}}
    source:
      address: "{{ProfileRegistryV2}}"
      abi: ProfileRegistryV2
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/ProfileRegistryV2.ts
      entities:
        - EndUser
      abis:
        - name: ProfileRegistryV2
          file: ./abis/ProfileRegistryV2.json
      eventHandlers:
        - event: NameUpdated(indexed address,uint256,string)
          handler: handleNameUpdated
        - event: AvatarUpdated(indexed address,bytes32)
          handler: handleAvatarUpdated
        - event: MetadataUpdated(indexed address,bytes)
          handler: handleMetadataUpdated
  - kind: ethereum/contract
    name: FanController
    network: {{network}}
    source:
      address: "{{pumpum.FanController}}"
      abi: FanController
      startBlock: {{pumpum.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PumToken
      abis:
        - name: FanController
          file: ./abis/FanController.json
        - name: CommunityPool
          file: ./abis/CommunityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: TokenIssued(indexed address,indexed address,string,string,uint256,uint256,string)
          handler: handleTokenIssued
        - event: OrderFilled(indexed address,indexed address,address,bool,uint256,uint256)
          handler: handleOrderFilled
        - event: MetadataUpdated(indexed address,string)
          handler: handleMetadataUpdated
      file: ./src/FanController.ts
  - kind: ethereum/contract
    name: PointMarket
    network: {{network}}
    source:
      address: "{{pumpum.PointMarket}}"
      abi: PointMarket
      startBlock: {{pumpum.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PumActionHistory
      abis:
        - name: PointMarket
          file: ./abis/PointMarket.json
      eventHandlers:
        - event: PointBought(indexed address,uint256,uint256,bytes)
          handler: handlePointBought
      file: ./src/PointMarket.ts
  - kind: ethereum/contract
    name: CommunityPool
    network: {{network}}
    source:
      address: "{{pumpum.CommunityPool}}"
      abi: CommunityPool
      startBlock: {{pumpum.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PumToken
      abis:
        - name: CommunityPool
          file: ./abis/CommunityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: MarketStatusUpdated(indexed address,bool)
          handler: handleMarketStatusUpdated
        - event: Swap(indexed address,indexed address,int256,int256,uint256,uint256)
          handler: handleSwap
      file: ./src/CommunityPool.ts
  - kind: ethereum/contract
    name: SmartWalletFactoryWrapper
    network: {{network}}
    source:
      address: "{{SmartWalletFactoryWrapper}}"
      abi: SmartWalletFactoryWrapper
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/SmartWalletFactoryWrapper.ts
      entities:
        - EndUser
      abis:
        - name: SmartWalletFactoryWrapper
          file: ./abis/SmartWalletFactoryWrapper.json
      eventHandlers:
        - event: WalletCreated(indexed address,bytes[],uint256)
          handler: handleWalletCreated
templates:
  - name: PrexSmartWallet
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PrexSmartWallet
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/PrexSmartWallet.ts
      entities:
        - EndUser
      abis:
        - name: PrexSmartWallet
          file: ./abis/PrexSmartWallet.json
      eventHandlers:
        - event: AddOwner(indexed uint256,bytes)
          handler: handleAddOwner
        - event: RemoveOwner(indexed uint256,bytes)
          handler: handleRemoveOwner
