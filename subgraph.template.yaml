specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: TransferRequestDispatcher
    network: {{network}}
    source:
      address: "{{TransferRequestDispatcher}}"
      abi: TransferRequestDispatcher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AssetGroupEntity
        - AssetEntity
        - VaultEntity
      abis:
        - name: TransferRequestDispatcher
          file: ./abis/TransferRequestDispatcher.json
      eventHandlers:
        - event: Transferred(address,address,address,uint256,bytes)
          handler: handleTransferred
      file: ./src/TransferRequestDispatcher.ts
  - kind: ethereum/contract
    name: TransferWithSecretRequestDispatcher
    network: {{network}}
    source:
      address: "{{TransferWithSecretRequestDispatcher}}"
      abi: TransferWithSecretRequestDispatcher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - SpotTradeHistoryItem
      abis:
        - name: TransferWithSecretRequestDispatcher
          file: ./abis/TransferWithSecretRequestDispatcher.json
      eventHandlers:
        - event: RequestSubmitted(address,address,address,uint256,bytes,bytes)
          handler: handleRequestSubmitted
      file: ./src/TransferWithSecretRequestDispatcher.ts
  - kind: ethereum/contract
    name: OnetimeLockRequestDispatcher
    network: {{network}}
    source:
      address: "{{OnetimeLockRequestDispatcher}}"
      abi: OnetimeLockRequestDispatcher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - SpotTradeHistoryItem
      abis:
        - name: OnetimeLockRequestDispatcher
          file: ./abis/OnetimeLockRequestDispatcher.json
      eventHandlers:
        - event: RequestSubmitted(bytes32,address,address,uint256,uint256,bytes)
          handler: handleRequestSubmitted
        - event: RequestCompleted(bytes32,address,bytes)
          handler: handleRequestCompleted
        - event: RequestCancelled(bytes32)
          handler: handleRequestCancelled
      file: ./src/OnetimeLockRequestDispatcher.ts
  - kind: ethereum/contract
    name: TokenDistributor
    network: {{network}}
    source:
      address: "{{TokenDistributor}}"
      abi: TokenDistributor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - SpotTradeHistoryItem
      abis:
        - name: TokenDistributor
          file: ./abis/TokenDistributor.json
      eventHandlers:
        - event: Submitted(bytes32,address,address,uint256,uint256,uint256,uint256,uint256,string,bytes32)
          handler: handleSubmitted
        - event: Deposited(bytes32,address,uint256)
          handler: handleDeposited
        - event: Received(bytes32,address,uint256)
          handler: handleReceived
        - event: RequestCancelled(bytes32,uint256)
          handler: handleRequestCancelled
        - event: RequestExpired(bytes32,uint256)
          handler: handleRequestExpired
      file: ./src/TokenDistributor.ts
  - kind: ethereum/contract
    name: SwapExecutorV1
    network: {{network}}
    source:
      address: "{{SwapExecutorV1}}"
      abi: SwapExecutorV1
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - SpotTradeHistoryItem
      abis:
        - name: SwapExecutorV1
          file: ./abis/SwapExecutorV1.json
      eventHandlers:
        - event: OrderFilled(indexed bytes32,indexed address,address,address,uint256,(address,uint256,address)[])
          handler: handleOrderFilled
      file: ./src/SwapExecutorV1.ts
  - kind: ethereum/contract
    name: ProfileRegistry
    network: {{network}}
    source:
      address: "{{ProfileRegistry}}"
      abi: ProfileRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ProfileRegistry.ts
      entities:
        - Profile
      abis:
        - name: ProfileRegistry
          file: ./abis/ProfileRegistry.json
      eventHandlers:
        - event: ProfileNameUpdated(indexed address,address,string)
          handler: handleProfileNameUpdated
        - event: ProfileImageUpdated(indexed address,address,uint256)
          handler: handleProfileImageUpdated
        - event: ProfileNameGroupCreated(indexed address,string)
          handler: handleProfileNameGroupCreated
  - kind: ethereum/contract
    name: PrexSmartWalletFactory
    network: {{network}}
    source:
      address: "{{PrexSmartWalletFactory}}"
      abi: PrexSmartWalletFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/PrexSmartWalletFactory.ts
      entities:
        - PrexSmartWallet
      abis:
        - name: PrexSmartWalletFactory
          file: ./abis/PrexSmartWalletFactory.json
      callHandlers:
        - function: createAccount(bytes[],uint256)
          handler: handleCreateAccount
templates:
  - name: PrexSmartWallet
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PrexSmartWallet
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/PrexSmartWallet.ts
      entities:
        - PrexSmartWallet
      abis:
        - name: PrexSmartWallet
          file: ./abis/PrexSmartWallet.json
      eventHandlers:
        - event: AddOwner(indexed uint256,bytes)
          handler: handleAddOwner
        - event: RemoveOwner(indexed uint256,bytes)
          handler: handleRemoveOwner
